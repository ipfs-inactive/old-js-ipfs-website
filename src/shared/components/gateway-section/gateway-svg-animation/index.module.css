@import "shared/styles/imports/variables.css";
@import "shared/styles/imports/custom-medias.css";

@keyframes fillIn {
  to { stroke-dashoffset: 0; }
}

@keyframes pulse {
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.1;
  }

  100% {
    opacity: 1;
  }
}

@keyframes pulseReverse {
  0% {
    opacity: 0.1;
  }

  50% {
    opacity: 1;
  }

  100% {
    opacity: 0.1;
  }
}

.container {
  position: relative;
  width: 100%;
  height: 100%;

  &.animationOff {
    & div > div {
      animation-play-state: paused;
    }
  }

  & .message {
    position: absolute;
    top: 0;
    right: 0;
    max-width: 50%;
    z-index: 10;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    opacity: 0;
    border-radius: 6px;
    box-shadow: 0 20px 20px rgba(0, 0, 0, 0.2);
    font-family: var(--typography-text-font);
    transition: opacity var(--transition-default-duration) ease;

    & .header {
      display: flex;
      background: var(--color-dark-blue-opacity);

      & .title {
        padding: 25px 0 25px 30px;
        flex-grow: 1;
        color: var(--color-light-blue);
        font-size: var(--typography-text-size);
        font-weight: 600;
        text-transform: uppercase;
        line-height: 24px;
      }

      & .close {
        margin: 20px;
        flex: 0 0 19px;

        & svg {
          opacity: 0.8;
          cursor: pointer;
          transition: opacity var(--transition-default-duration) ease;

          &:hover {
            opacity: 1;
          }
        }
      }
    }

    & .body {
      padding: 30px;
      flex-grow: 1;
      background: var(--color-menu-dark-blue-opacity);
      font-size: var(--typography-text-size-xsmall);
      line-height: 24px;

      & a {
        color: var(--color-white);
        text-decoration: none;
        transition: color var(--transition-default-duration) ease;

        &:hover {
          color: var(--color-yellow);
        }
      }

      & ul {
        margin-left: -40px;

        & li {
          margin: 0 0 0 15px;

          &:last-child {
            margin-bottom: unset;

            & p:last-child {
              margin-top: 30px;
              margin-left: -15px;
            }
          }
        }
      }
    }
  }

  &.active {
    & .message {
      opacity: 1;
      transition-delay: 2600ms;
    }

    &.messageClosed {
      & .message {
        opacity: 0;
        transition-delay: 0s;
      }
    }

    & svg {
      & g[data-name="gateway"] {
        & g[data-name="white-connection"],
        & g[data-name="white-nodes"],
        & g[data-name="http-gateway-arrow"] {
          opacity: 0.3;
          transition: opacity 500ms ease-in-out;
          stroke-dasharray: 2;
        }
      }

      & g[data-name="service-worker"] {
        & g[data-name="yellow-nodes"] {
          opacity: 1;
          transition: opacity 1s ease-in-out;
          transition-delay: 2s;
        }

        & g[data-name="browser-service-worker-arrow"] {
          opacity: 1;
          animation: fillIn 3s linear forwards;
          animation-delay: 300ms;
          stroke-dasharray: 1000;
          stroke-dashoffset: 1000;

          & polygon:nth-child(3) {
            opacity: 1;
            transition: opacity 300ms ease-in-out;
            transition-delay: 500ms;
          }
        }

        & g[data-name="service-worker-icon"],
        & path[data-name="service-worker-text"] {
          opacity: 1;
          transition: opacity 1s ease-in-out;
          transition-delay: 500ms;
        }

        & g[data-name="yellow-conection"] {
          opacity: 1;

          & path {
            animation: fillIn 1.5s linear forwards;
            animation-delay: 1300ms;
            stroke-dasharray: 1000;
            stroke-dashoffset: 1000;
          }
        }
      }
    }

    & .gatewayBlueBeams,
    & .gatewayWhiteBeam1,
    & .gatewayWhiteBeam2 {
      display: none;
    }

    & .serviceWorkerArrowBeams {
      opacity: 1;
      animation: pulseReverse 3s infinite ease-in-out alternate;
      animation-delay: 1300ms;
      transition: opacity 1s ease-in-out;
      transition-delay: 1300ms;
    }

    & .serviceWorkerBeam1 {
      opacity: 1;
      animation: pulseReverse 4s infinite ease-in-out alternate;
      animation-delay: 1600ms;
      transition: opacity 300ms ease-in-out;
      transition-delay: 1600ms;
    }

    & .serviceWorkerBeam2 {
      opacity: 1;
      animation: pulseReverse 6s infinite ease-in-out alternate;
      animation-delay: 1800ms;
      transition: opacity 300ms ease-in-out;
      transition-delay: 1800ms;
    }

    & .serviceWorkerBeam3 {
      opacity: 1;
      animation: pulseReverse 5s infinite ease-in-out alternate;
      animation-delay: 2000ms;
      transition: opacity 500ms ease-in-out;
      transition-delay: 2000ms;
    }

    & .serviceWorkerBeam4 {
      opacity: 1;
      animation: pulseReverse 3s infinite ease-in-out alternate;
      animation-delay: 2200ms;
      transition: opacity 800ms ease-in-out;
      transition-delay: 2200ms;
    }
  }

  & svg {
    width: 120%;

    & g[data-name="gateway"] {
      & g[data-name="white-connection"],
      & g[data-name="white-nodes"],
      & g[data-name="http-gateway-arrow"] {
        opacity: 1;
        transition: opacity 500ms ease-in-out;
      }
    }

    & g[data-name="service-worker"] {
      & g[data-name="yellow-nodes"] {
        opacity: 0;
        transition: opacity 500ms ease-in-out;
      }

      & g[data-name="browser-service-worker-arrow"] {
        opacity: 0;
        transition: opacity 500ms ease-in-out;

        & polygon:nth-child(3) {
          opacity: 0;
          transition: opacity 500ms ease-in-out;
        }
      }

      & g[data-name="service-worker-icon"],
      & path[data-name="service-worker-text"] {
        opacity: 0;
        transition: opacity 500ms ease-in-out;
      }

      & g[data-name="yellow-conection"] {
        opacity: 0;
        transition: opacity 500ms ease-in-out;
      }
    }
  }

  & .desktop > div,
  & .mobile > div {
    position: absolute;
    top: 0;
    width: 100%;
  }

  & .gatewayBlueBeams {
    animation: pulseReverse 3s infinite ease-in-out alternate;
  }

  & .gatewayWhiteBeam1 {
    animation: pulse 5s infinite ease-in-out alternate;
    animation-delay: 800ms;
  }

  & .gatewayWhiteBeam2 {
    animation: pulse 4s infinite ease-in-out alternate;
    animation-delay: 1200ms;
  }

  & .serviceWorkerBeam1,
  & .serviceWorkerBeam2,
  & .serviceWorkerBeam3,
  & .serviceWorkerBeam4,
  & .serviceWorkerArrowBeams {
    opacity: 0;
    transition: opacity 500ms ease-in-out;
  }

  & .beamsNodes1,
  & .beamsNodes11 {
    animation: pulse 6s infinite ease-in-out;
  }

  & .beamsNodes2,
  & .beamsNodes4 {
    animation: pulse 6s infinite ease-in-out;
    animation-delay: 1s;
  }

  & .beamsNodes3 {
    animation: pulse 4s infinite ease-in-out;
    animation-delay: 1200ms;
  }

  & .beamsNodes6,
  & .beamsNodes10 {
    animation: pulse 8s infinite ease-in-out;
    animation-delay: 1500ms;
  }

  & .beamsNodes7,
  & .beamsNodes8 {
    animation: pulse 6s infinite ease-in-out;
    animation-delay: 2200ms;
  }

  & .beamsNodes5,
  & .beamsNodes9,
  & .beamsNodes12 {
    animation: pulse 4s infinite ease-in-out;
    animation-delay: 1900ms;
  }
}

@media (--layout-lte-small) {
  .container {
    max-height: 95vh;

    &.active {
      max-height: unset;

      & .message {
        position: relative;
        max-width: 100%;
        margin-top: -200px;
        margin-bottom: 10%;

        & .header .close {
          margin: 15px;
        }

        & .body {
          line-height: 20px;

          & a {
            color: var(--color-yellow);
          }

          & ul {
            list-style-type: none;

            & li {
              margin: 0 0 15px 0;

              &:last-child {
                margin-bottom: unset;

                & p:last-child {
                  margin-left: 0;
                }
              }
            }
          }
        }
      }

      &.messageClosed {
        max-height: 95vh;

        & .message {
          height: 158px;
          z-index: -20;
        }
      }
    }

    & .desktop {
      display: none;
    }

    & .mobile {
      & svg {
        width: 105%;
      }

      & > div {
        animation-play-state: paused !important;
      }
    }
  }
  @media (max-height: 700px) {
    .container {
      max-height: unset !important;

      &.active {
        & .message {
          position: relative;
        }
      }
    }
  }
}

@media (--layout-gte-medium) {
  .mobile {
    display: none;
  }
}
