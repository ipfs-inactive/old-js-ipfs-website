{
  "notFoundPage": {
    "mainMessage": "Page not found",
    "detailedMessage": "You just hit a route that does not exist... the sadness."
  },
  "buttons": {
    "buttonLearnMore": "Learn More",
    "buttonGithub": "Github",
    "buttonTwitter": "Twitter",
    "buttonIrcFreenode": "IRC Freenode",
    "buttonAddLanguage": "Add your language"
  },

  "navBar": {
    "item1": "Get Started",
    "item2": "Tutorials",
    "item3": "API",
    "item4": "Open Source"
  },

  "hero": {
    "welcomeMessage": {
      "long": "A full P2P protocol written entirely in JavaScript",
      "short": "A P2P JavaScript protocol"
    },
    "textDescription": {
      "long": "js-ipfs paves the way for the Browser implementation of the IPFS protocol. Written entirely in JavaScript, it runs in a Browser, a Service Worker, a Web Extension and Node.js, opening the door to a world of possibilities.",
      "short": "js-ipfs runs in a Browser, a Service Worker, a Web Extension and Node.js, opening the door to a world of possibilities."
    },
    "currentVersion": {
      "long": "Current version: {version}",
      "short": "v{version}"
      },
    "latestUpdate": {
      "long": "Latest update: {date}",
      "short": "Updated {date}"
      },
    "downloadsLastMonth": "Downloads last month: {count}",
    "errorPckMessage": "Couldn't fetch IPFS package data.",
    "animationButton": {
      "enable": "Enable Animation",
      "disable": "Disable Animation"
    }
  },

  "banner": {
    "highlightMessage": "The js-ipfs library is in Alpha state.",
    "message": "The codebase hasn't been audited by security specialists and it shouldn't be used to store, share or publish sensitive information."
  },

  "features": {
    "sectionTitle": "Features",
    "sectionDesc": "Packed with all the things you know and love about IPFS. This implementation also carries some extra neat things that are unique to the Browser. It's the toolkit to power all your DWeb Applications.",
    "list": [
      {
        "title": "Run on Node.js and the Browser",
        "desc": "js-ipfs works out of the box on Node.js, Electron and any modern browser. It is also customizable by design so that you can use it on your favorite runtime."
      },
      {
        "title": "Implements the full IPFS Stack",
        "desc": "No feature was left behind. js-ipfs is not a light client, it is the full implementation of the IPFS protocol."
      },
      {
        "title": "Use PubSub to communicate in realtime with the other peers",
        "desc": "IPFS nodes can create network topologies based on topics of interest to broadcast events in realtime."
      },
      {
        "title": "Add and retrieve files from anywhere in the IPFS Network",
        "desc": "IPFS is designed to use the power of Content Addressing to find the nodes in the network that have the content you are looking for. In the same way, you can add data and other nodes will find it too."
      },
      {
        "title": "Use the DAG API to traverse over any hash linked data structure",
        "desc": "IPFS uses [IPLD](https://ipld.io/), the InterPlanetary Linked-Data, a model that enables you interact with data from multiple sources, such as git, blockchains and more."
      },
      {
        "title": "libp2p is built in",
        "desc": "[libp2p](https://libp2p.io/) is the Modular Networking Stack that was created for IPFS and now you can use it through IPFS for your application directly as well."
      },
      {
        "title": "Run it as a daemon",
        "desc": "js-ipfs also comes with the option to run it as a daemon so that you can interact with it using the HTTP API that you are familiar with from go-ipfs."
      },
      {
        "title": "Create stable addresses for changing data",
        "desc": "It comes with IPNS, the Interplanetary Naming System, a way to author mutable pointers (records) to distribute updates in an authenticated and certified way."
      }
    ]
  },

  "gettingStarted": {
    "sectionTitle": "Getting Started",
    "sectionDesc": "IPFS gives you a Content Addressing primitive for all your data on the DWeb. You can make data available to the network or fetch existing data through its CID, the Content Identifier. Try it out below or explore our [ProtoSchool tutorials](https://proto.school/course/ipfs)!",
    "addDataToIPFS": "Adding data to IPFS",
    "output": "Output",
    "getDataFromIPFS": "Getting data from IPFS",
    "usingJavascript": "Using Javascript in the Browser or Node.js",
    "usingCli": "Using the CLI",
    "usingGateway": "Using the HTTP Gateway"
  },

  "serviceWorker": {
    "sectionTitle": "Service Worker Gateway",
    "sectionDesc": "Turn this page into a full IPFS Gateway without touching any servers or using HTTP to fetch content from the IPFS Network! Yes, you read it right, the Service Worker Gateway with js-ipfs can connect directly to the IPFS Network.",
    "activationSuccessTitle": "Congratulations! Your browser is now a fully operational IPFS Gateway",
    "activationSuccessText": "Load any content as you would normally do with https://gateway.ipfs.io. Here are some examples for you to try:\n- [ipfs.io - /ipfs/{ipfsWebsiteHash}](https://js.ipfs.io/ipfs/{ipfsWebsiteHash})\n- [js.ipfs.io - /ipfs/{jsIpfsWebsiteHash}](https://js.ipfs.io/ipfs/{jsIpfsWebsiteHash})\n- [awesome.ipfs.io - /ipfs/{awesomeIpfsWebsiteHash}](https://js.ipfs.io/ipfs/{awesomeIpfsWebsiteHash})\n - [peerpad.net - /ipfs/{peerpadWebsiteHash}](https://js.ipfs.io/ipfs/{peerpadWebsiteHash})\n\nTry with any other hash by opening https://js.ipfs.io/ipfs/<your hash>",
    "toggleText": "Enable Service Worker",
    "activatingToggleText": "Activating Service Worker...",
    "activationErrorMessage": "An error occurred when enabling the Service Worker.",
    "deactivationErrorMessage": "An error occurred when disabling the Service Worker.",
    "nonRootScopeWarningMessage": "The Service Worker can't be activated when viewing from this URL. Try in https://js.ipfs.io instead.",
    "incompatibleMessageText": "This browser does not support Service Workers.",
    "activatedToggleText": "Disable Service Worker"
  },

  "whatArePeopleBuilding": {
    "sectionTitle": "What people are building with it",
    "sectionDesc": "",
    "list": [
      {
        "desc": "The whole Internet Archive, but decentralized. Access the archive's over 40m items via the DWeb. Combining a seeding gateway and a javascript UI for Firefox and Chrome."
      },
      {
        "desc": "PeerPad is a collaborative real-time editor that works on the decentralised web, built on top of IPFS and Y.js. It uses no second or third-party: all participating nodes talk directly to each other without a central service."
      },
      {
        "desc": "Give your Browser super powers with the IPFS Web Extension. IPFS Companion is an extension that can be used in Chrome, Firefox and the Brave Browsers to give you access to the IPFS Network seamlessly. It also packs extra features such as file sharing and APIs for Web Developers."
      },
      {
        "desc": "[Orbit Chat](https://orbit.chat) is a serverless, distributed, peer-to-peer chat application built on top of OrbitDB. OrbitDB uses [IPFS](https://ipfs.io) as its data storage and [IPFS Pubsub](https://ipfs.io/blog/29-js-ipfs-pubsub) to automatically sync databases with peers."
      }
    ]
  },

  "whatYouCanBuild": {
    "sectionTitle": "What you can build with JS-IPFS",
    "sectionDesc": "There are unlimited options for you to use js-ipfs. The following examples provide you an idea of what you can build with js-ipfs. Try them out!",
    "suggestion": {
      "text": "Have suggestions?",
      "linkText": "Share them here!"
    }
  },

  "publicationsAndTalks": {
    "sectionTitle": "Publications & Talks",
    "sectionDesc": "Watch project updates, demos and other talks by the IPFS Community on the JavaScript project of IPFS. We will be adding dozens more talks soon from the IPFS Dev Meetings."
  },

  "community": {
    "sectionTitle": "Community",
    "sectionDesc": "js-ipfs is an MIT Licensed, Open Source project from the IPFS community. There are many ways you can contribute: help write the specification, code implementations and tools using js-ipfs, craft examples and tutorials, and join our [working group calls](https://github.com/ipfs/team-mgmt#synchronous-communication) to discuss IPFS with us.",
    "socialNetworksText": "Come hang out!"
  },

  "footer": {
    "rightContent": "js-ipfs was started and is sponsored by",
    "leftContent": "Protocol Labs | Except as noted, content licensed CC-BY 3.0"
  }
}
